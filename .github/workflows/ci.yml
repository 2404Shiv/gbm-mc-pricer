name: build-and-validate
on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release -j

      - name: Validate pricing & variance reduction
        shell: bash
        run: |
          set -euo pipefail
          BIN=./build/pricer
          CV='{"S0":100,"K":100,"r":0.02,"sigma":0.2,"T":1,"n_paths":200000,"antithetic":true,"control_variate":true,"seed":42}'
          PL='{"S0":100,"K":100,"r":0.02,"sigma":0.2,"T":1,"n_paths":200000,"antithetic":false,"control_variate":false,"seed":42}'

          $BIN "$CV" | tee cv.txt
          $BIN "$PL" | tee pl.txt

          python3 - <<'PY'
import re, sys
cv = open('cv.txt').read()
pl = open('pl.txt').read()

def bs_call(txt):
    m = re.search(r'Call\s*=\s*([0-9.]+)', txt)
    assert m, "BS Call not found"
    return float(m.group(1))

def mc_call_and_se(txt):
    m = re.search(r'Call_MC\s*=\s*([0-9.]+).*?SE=([0-9.]+)', txt, flags=re.S)
    assert m, "MC Call/SE not found"
    return float(m.group(1)), float(m.group(2))

bs = bs_call(cv)
mc_cv, se_cv = mc_call_and_se(cv)
_, se_pl = mc_call_and_se(pl)
diff = abs(mc_cv - bs)

print(f"BS={bs} MC={mc_cv} SE_cv={se_cv} SE_plain={se_pl} diff={diff}")
assert diff <= 3*se_cv, f"|MC-BS| {diff} > 3*SE {3*se_cv}"
assert se_cv < se_pl, f"SE with CV {se_cv} not < plain {se_pl}"
print("Validation OK")
PY
